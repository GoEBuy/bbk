# -*- coding: utf-8 -*-
# Generated by Django 1.11.12 on 2018-04-20 23:08
from __future__ import unicode_literals

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0008_alter_user_username_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='NewUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.ASCIIUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=30, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('pwd', models.CharField(default='', max_length=20, verbose_name='\u5bc6\u7801')),
                ('phone', models.CharField(blank=True, max_length=30, verbose_name='\u624b\u673a')),
                ('session', models.CharField(blank=True, default='', max_length=50, null=True, verbose_name='\u7528\u6237\u767b\u5f55\u65f6\u4f1a\u5199\u5165\u5f53\u524dsession_key')),
                ('level', models.IntegerField(default=0, help_text='\u7528\u6237\u7b49\u7ea7')),
                ('num_following', models.IntegerField(default=0, verbose_name='\u5173\u6ce8\u4eba\u6570')),
                ('num_followed', models.IntegerField(default=0, verbose_name='\u88ab\u5173\u6ce8\u4eba\u6570')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
            ],
            options={
                'verbose_name': '\u7528\u6237',
                'verbose_name_plural': '\u7528\u6237',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('cate_id', models.AutoField(primary_key=True, serialize=False)),
                ('cate_name', models.CharField(max_length=20)),
                ('cate_desc', models.CharField(max_length=50, null=True, verbose_name='\u5907\u6ce8')),
                ('state', models.IntegerField(choices=[(('0', 'nouse'), ('1', 'inuse'))], default=1, verbose_name='\u7c7b\u522b\u72b6\u6001')),
                ('update_time', models.DateTimeField(auto_now=True)),
                ('pcate', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='users.Category')),
            ],
            options={
                'verbose_name': '\u5206\u7c7b',
                'verbose_name_plural': '\u5206\u7c7b',
            },
        ),
        migrations.CreateModel(
            name='OpenUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('open_type', models.IntegerField(choices=[(0, 'unknown'), (1, 'qq'), (2, 'wechat'), (3, 'taobao'), (4, 'skype'), (5, 'linkin'), (6, '\u672a\u77e5')], default=0, verbose_name='\u5f00\u653e\u5e10\u53f7\u7c7b\u578b')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': '\u7528\u6237\u5f00\u653e\u767b\u5f55\u5e10\u53f7\u8868',
                'verbose_name_plural': '\u7528\u6237\u5f00\u653e\u767b\u5f55\u5e10\u53f7\u8868',
            },
        ),
        migrations.CreateModel(
            name='UserFollowing',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_following', models.IntegerField(choices=[(-1, 'None'), (0, 'False'), (1, 'True')], default=-1, verbose_name='\u662f\u5426Following')),
                ('is_block', models.IntegerField(choices=[(-1, 'None'), (0, 'False'), (1, 'True')], default=-1, verbose_name='\u662f\u5426Block')),
                ('add_time', models.DateTimeField(auto_now_add=True, verbose_name='\u6dfb\u52a0\u65f6\u95f4')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='\u66f4\u65b0\u65f6\u95f4')),
                ('following', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='following', to=settings.AUTH_USER_MODEL, verbose_name='\u81ea\u5df1\u5173\u6ce8\u7684\u90a3\u4e2a\u7528\u6237')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='follower', to=settings.AUTH_USER_MODEL, verbose_name='\u7528\u6237')),
            ],
            options={
                'verbose_name': '\u7528\u6237\u7684Following \u548c Block \u5173\u7cfb\u8868',
                'verbose_name_plural': '\u7528\u6237\u7684Following \u548c Block \u5173\u7cfb\u8868',
            },
        ),
        migrations.CreateModel(
            name='UserInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('truename', models.CharField(blank=True, default='', help_text='\u771f\u5b9e\u59d3\u540d', max_length=20)),
                ('birthdate', models.DateField(blank=True, help_text='\u51fa\u751f\u65e5\u671f', null=True)),
                ('is_validate', models.IntegerField(choices=[(0, '\u672a\u9a8c\u8bc1'), (1, '\u5df2\u9a8c\u8bc1')], default=0, help_text='\u59d3\u540d\u662f\u5426\u9a8c\u8bc1')),
                ('email_verify', models.IntegerField(choices=[(0, '\u672a\u9a8c\u8bc1'), (1, '\u5df2\u9a8c\u8bc1')], default=0, help_text='Email\u662f\u5426\u5df2\u7ecf\u9a8c\u8bc1')),
                ('mobile_verify', models.IntegerField(choices=[(0, '\u672a\u9a8c\u8bc1'), (1, '\u5df2\u9a8c\u8bc1')], default=0, help_text='Mobile\u662f\u5426\u5df2\u7ecf\u9a8c\u8bc1')),
                ('city', models.CharField(blank=True, max_length=50, verbose_name='\u6240\u5728\u5730')),
                ('address', models.CharField(blank=True, max_length=150, verbose_name='\u5730\u5740')),
                ('img', models.ImageField(blank=True, default='', upload_to='imgs/img_user', verbose_name='\u5934\u50cf')),
                ('profile', models.CharField(default='', max_length=256, verbose_name='profile')),
                ('gender', models.CharField(choices=[('F', 'Female'), ('M', 'male'), ('U', 'Unknown')], default='M', max_length=1)),
                ('register_ip', models.CharField(blank=True, default='', help_text='\u6ce8\u518cip', max_length=30)),
                ('update_time', models.DateTimeField(auto_now=True, help_text='\u66f4\u65b0\u65f6\u95f4')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': '\u7528\u6237\u8be6\u7ec6\u4fe1\u606f\u8868',
                'verbose_name_plural': '\u7528\u6237\u8be6\u7ec6\u4fe1\u606f\u8868',
            },
        ),
        migrations.CreateModel(
            name='UserStar',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('star_service', models.IntegerField(default=1, verbose_name='\u670d\u52a1\u6001\u5ea6')),
                ('star_personal', models.IntegerField(default=1, verbose_name='\u4e13\u4e1a\u7a0b\u5ea6')),
                ('desc', models.CharField(default='', max_length=300, verbose_name='\u7528\u6237\u5185\u884c\u884c\u4e1a\u81ea\u6211\u63cf\u8ff0')),
                ('cate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cate', to='users.Category')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': '\u7528\u6237\u661f\u7ea7\u8868',
                'verbose_name_plural': '\u7528\u6237\u661f\u7ea7\u8868',
            },
        ),
        migrations.CreateModel(
            name='UserValidateInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('valid_type', models.IntegerField(choices=[(0, '\u8eab\u4efd\u8bc1'), (1, '\u62a4\u7167'), (2, '\u5b66\u751f\u8bc1'), (3, '\u5de5\u4f5c\u8bc1'), (4, '\u58eb\u5175\u8bc1'), (5, '\u624b\u673a\u53f7'), (6, '\u90ae\u7bb1'), (7, '\u672a\u77e5')], default=0, verbose_name='\u8ba4\u8bc1\u7c7b\u578b')),
                ('cert_no', models.CharField(default='', max_length=50, verbose_name='\u8ba4\u8bc1\u53f7\u7801')),
                ('valid_state', models.IntegerField(choices=[(0, '\u672a\u8ba4\u8bc1'), (1, '\u8ba4\u8bc1\u4e2d'), (2, '\u5df2\u8ba4\u8bc1'), (3, '\u672a\u77e5'), (4, '\u58eb\u5175\u8bc1'), (5, '\u624b\u673a\u53f7'), (6, '\u90ae\u7bb1')], default=0, verbose_name='\u8ba4\u8bc1\u72b6\u6001')),
                ('valid_captcha', models.CharField(default='', max_length=15, verbose_name='\u8ba4\u8bc1\u9a8c\u8bc1\u7801')),
                ('valid_captcha_exp', models.CharField(default='', max_length=25, verbose_name='\u8ba4\u8bc1\u9a8c\u8bc1\u7801\u8fc7\u671f\u65f6\u95f4')),
                ('submit_time', models.DateTimeField(auto_now=True, verbose_name='\u7533\u8bf7\u9a8c\u8bc1\u65f6\u95f4')),
                ('audit_time', models.DateTimeField(auto_now=True, verbose_name='\u5ba1\u6838\u65f6\u95f4')),
                ('create_time', models.DateTimeField(auto_now=True, verbose_name='\u521b\u5efa\u65f6\u95f4')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': '\u7528\u6237\u8eab\u4efd\u8ba4\u8bc1\u8d44\u6599\u8868',
                'verbose_name_plural': '\u7528\u6237\u8eab\u4efd\u8ba4\u8bc1\u8d44\u6599\u8868',
            },
        ),
        migrations.AddField(
            model_name='newuser',
            name='preflist',
            field=models.ManyToManyField(through='users.UserStar', to='users.Category'),
        ),
        migrations.AddField(
            model_name='newuser',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
        migrations.AlterUniqueTogether(
            name='userstar',
            unique_together=set([('user', 'cate')]),
        ),
        migrations.AlterUniqueTogether(
            name='userfollowing',
            unique_together=set([('user', 'following')]),
        ),
        migrations.AddIndex(
            model_name='category',
            index=models.Index(fields=['pcate'], name='idx_pcate'),
        ),
        migrations.AddIndex(
            model_name='category',
            index=models.Index(fields=['cate_name'], name='idx_cate_name'),
        ),
    ]
